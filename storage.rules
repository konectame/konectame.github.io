rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated() && request.auth.token.admin == true;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isValidImageType() {
      return request.resource.contentType.matches('image/.*');
    }

    function isValidFileSize() {
      return request.resource.size <= 5 * 1024 * 1024; // 5MB max
    }

    // Root folder structure: {rootFolder}/{marketplaceId}/users/{userId}/...
    match /{rootFolder}/{marketplaceId}/users/{userId}/{allPaths=**} {
      // Allow read if:
      // 1. User is authenticated and is the owner of the profile
      // 2. User is an admin
      allow read: if isOwner(userId) || isAdmin();
      
      // Allow write if:
      // 1. User is authenticated and is the owner of the profile
      // 2. File is an image and under 5MB
      allow write: if isOwner(userId) 
        && isValidImageType() 
        && isValidFileSize();
    }

    // Deny access to all other paths by default
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
